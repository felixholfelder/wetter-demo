name: Wetter-Demo Pipeline

on:
  push:
    branches:
      - '**'
    tags:
      - '**'
  pull_request:
    branches:
      - '**'
    tags:
      - '**'

env:
  IMAGE_NAME: felixholfelder/wetter-demo
  VERSION: 0.0.${{ github.run_id }}

jobs:
  versioning:
    runs-on: ubuntu-latest
    steps:
      - name: Set version
        run: |
          if [[ github.ref_type = 'tag' ]]; then
              echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
          fi
          echo Version: ${{ env.VERSION }}

#  dockerize:
#    runs-on: ubuntu-latest
#    needs: versioning
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Build Docker image
#        run: docker build . -t ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
#
#      - name: Push to Dockerhub
#        run: |
#          docker login -u=${{ secrets.DOCKERHUB_USER }} -p=${{ secrets.DOCKERHUB_PASS }}
#          docker push ${{ env.IMAGE_NAME }}:${{ env.VERSION }}

  buildBundles:
    runs-on: ubuntu-latest
#    needs: dockerize
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use flutter-sdk
        uses: subosito/flutter-action@v2

      - name: Build Android-APK
        run: |
          flutter --version
          flutter build apk --release

      - name: Save Android-build
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: output/app/outputs/apk/release/app-release.apk

#
#  clean-up:
#    runs-on: ubuntu-latest
#    if: always()
#    needs: deploy
#    steps:
#      - name: Delete artifacts
#        uses: geekyeggo/delete-artifact@v2
#        with:
#          name: refuel-service-artifact
